plugins {
    id 'java'
    id 'application'
    id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
}

repositories {
    mavenCentral()
}

dependencies {
    String javaFxVersion = '11'

    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-base', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: javaFxVersion, classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: javaFxVersion, classifier: 'linux'

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.5.0'
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.5.0'
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding('UTF-8')
}

applicationDefaultJvmArgs = ["-Dfile.encoding=utf-8"]

test {
    useJUnitPlatform()

    systemProperty "file.encoding", "utf-8"

    testLogging {
        events "passed", "skipped", "failed"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
        showStandardStreams = false
    }
}

application {
    mainClassName = "alice.Launcher"
}

shadowJar {
    archiveBaseName = "alice"
    archiveClassifier = null
}

checkstyle {
    toolVersion = '8.32'
}

run {
    standardInput = System.in
    systemProperty "file.encoding", "utf-8"
}

task runCli(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'alice.Launcher'
    standardInput = System.in
    systemProperty "file.encoding", "utf-8"

    // arguments to pass to the application
    args '-c'
}

// Depreciated
task textUiTest(type: Exec) {
    workingDir './text-ui-test'

    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        // on windows
        commandLine 'cmd', '/c', 'runtest.bat'
    } else {
        // on linux
        commandLine './runtest.sh'
    }
}
