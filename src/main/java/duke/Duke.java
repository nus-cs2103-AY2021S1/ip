package duke;

import duke.command.Parser;
import duke.exception.InvalidIndexNumberException;
import duke.exception.InvalidUserCommandException;
import duke.exception.StorageException;
import duke.exception.TaskDoesNotExistException;
import duke.storage.Storage;
import duke.storage.TaskList;
import duke.ui.Ui;

/**
 * Represents a chatbot that maintains a task list for users.
 */
public class Duke {
    private Storage storage;
    private Ui ui;
    private TaskList tasks;

    /**
     * Constructs a new Duke object which will create and access the saved task list at a pre-defined
     * filepath.
     */
    public Duke() {
        this.storage = new Storage("data/tasks");
        this.ui = new Ui();
        try {
            this.tasks = storage.load();
            assert this.tasks != null;
        } catch (StorageException e) {
            ui.showErrorMessage(e);
        }
    }

    /**
     * Returns the response generated by the program.
     *
     * @param input User input.
     * @return Response generated depending on the user input.
     */
    public String getResponse(String input) {
        try {
            return Parser.parseCommands(input, ui, storage);
        } catch (InvalidUserCommandException | TaskDoesNotExistException | InvalidIndexNumberException e) {
            return ui.showErrorMessage(e);
        }
    }

    /**
     * Displays the saved task list and standard greeting message when the program starts up.
     *
     * @return Currently saved task list and greetings from Duke.
     */
    public String getGreetings() {
        String greetings = ui.loadTaskList(tasks);
        greetings += ui.showGreetings();
        return greetings;
    }

    /**
     * Determines whether the user has entered the exit command to close the program.
     *
     * @return True if user has entered the exit command, otherwise returns false.
     */
    public boolean canExitProgram() {
        return ui.hasExited();
    }
}
